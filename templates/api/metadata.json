{%- extends "api/base_response.json" -%}

{%- block data -%}
{
  "api": {
    "name": "{{ app_name | default(config.APP_NAME, 'Flask API') }}",
    "version": "{{ api_version | default(config.API_VERSION, 'v1') }}",
    "title": "{{ api_title | default(config.API_TITLE, app_name + ' API') }}",
    "description": "{{ api_description | default(config.API_DESCRIPTION, 'RESTful API built with Flask 3.1.1') }}",
    "contact": {
      "name": "{{ contact_name | default(config.API_CONTACT_NAME, 'API Support') }}",
      "email": "{{ contact_email | default(config.API_CONTACT_EMAIL) }}",
      "url": "{{ contact_url | default(config.API_CONTACT_URL) }}"
    },
    "license": {
      "name": "{{ license_name | default(config.API_LICENSE_NAME) }}",
      "url": "{{ license_url | default(config.API_LICENSE_URL) }}"
    },
    "terms_of_service": "{{ terms_url | default(config.API_TERMS_URL) }}"
  },
  "server": {
    "framework": "Flask",
    "framework_version": "{{ flask_version | default('3.1.1') }}",
    "python_version": "{{ python_version | default('3.13.3') }}",
    "environment": "{{ environment | default(config.ENV) }}",
    "debug_mode": {{ config.DEBUG | default(false) | lower }},
    "testing_mode": {{ config.TESTING | default(false) | lower }},
    "host": "{{ server_host | default(request.host) }}",
    "base_url": "{{ base_url | default(request.url_root.rstrip('/')) }}",
    "api_root": "{{ api_root_url | default(url_for('api.root', _external=True)) }}",
    "uptime": "{{ server_uptime | default(null) }}",
    "deployment_time": "{{ deployment_time | default(config.DEPLOYMENT_TIME) }}"
  },
  "capabilities": {
    "authentication": {
      "supported": {{ supports_auth | default(true) | lower }},
      "methods": {{ auth_methods | default(['session', 'token', 'basic']) | tojson }},
      "session_timeout": "{{ session_timeout | default(config.SESSION_TIMEOUT, '30 minutes') }}",
      "csrf_protection": {{ csrf_enabled | default(config.WTF_CSRF_ENABLED, true) | lower }},
      "rate_limiting": {{ rate_limiting_enabled | default(true) | lower }}
    },
    "content_types": {
      "request": {{ supported_request_types | default(['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data']) | tojson }},
      "response": {{ supported_response_types | default(['application/json', 'text/html', 'text/plain']) | tojson }}
    },
    "http_methods": {{ supported_methods | default(['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS']) | tojson }},
    "versioning": {
      "strategy": "{{ version_strategy | default('url_prefix') }}",
      "current": "{{ api_version | default('v1') }}",
      "supported": {{ supported_versions | default(['v1']) | tojson }},
      "deprecated": {{ deprecated_versions | default([]) | tojson }}
    },
    "pagination": {
      "supported": {{ pagination_enabled | default(true) | lower }},
      "default_limit": {{ default_page_size | default(20) }},
      "max_limit": {{ max_page_size | default(100) }},
      "strategies": {{ pagination_strategies | default(['offset', 'cursor']) | tojson }}
    },
    "filtering": {
      "supported": {{ filtering_enabled | default(true) | lower }},
      "operators": {{ filter_operators | default(['eq', 'ne', 'gt', 'gte', 'lt', 'lte', 'in', 'like']) | tojson }}
    },
    "sorting": {
      "supported": {{ sorting_enabled | default(true) | lower }},
      "directions": {{ sort_directions | default(['asc', 'desc']) | tojson }}
    },
    "search": {
      "supported": {{ search_enabled | default(true) | lower }},
      "strategies": {{ search_strategies | default(['full_text', 'partial']) | tojson }}
    },
    "caching": {
      "supported": {{ caching_enabled | default(true) | lower }},
      "strategies": {{ cache_strategies | default(['response', 'query', 'session']) | tojson }},
      "ttl_default": "{{ cache_ttl | default('300 seconds') }}"
    },
    "file_upload": {
      "supported": {{ file_upload_enabled | default(true) | lower }},
      "max_size": "{{ max_file_size | default(config.MAX_CONTENT_LENGTH, '16MB') }}",
      "allowed_types": {{ allowed_file_types | default(['image/*', 'application/pdf', 'text/*']) | tojson }}
    },
    "websockets": {
      "supported": {{ websocket_enabled | default(false) | lower }},
      "endpoint": "{{ websocket_endpoint | default(null) }}"
    }
  },
  "endpoints": {
    "discovery": {
      "blueprints": {{ blueprint_list | default([]) | tojson }},
      "total_routes": {{ total_routes | default(0) }},
      "public_routes": {{ public_routes | default([]) | tojson }},
      "protected_routes": {{ protected_routes | default([]) | tojson }}
    },
    "core": {
      "health": "{{ health_url | default(url_for('health.status', _external=True)) }}",
      "metrics": "{{ metrics_url | default(url_for('api.metrics', _external=True)) }}",
      "documentation": "{{ docs_url | default(url_for('api.docs', _external=True)) }}",
      "openapi": "{{ openapi_url | default(url_for('api.openapi', _external=True)) }}",
      "swagger_ui": "{{ swagger_url | default(url_for('api.swagger_ui', _external=True)) }}"
    },
    "resources": {
      {%- for blueprint_name, blueprint_info in blueprints.items() if blueprint_info.public -%}
      "{{ blueprint_name }}": {
        "base_url": "{{ blueprint_info.url_prefix | default('/' + blueprint_name) }}",
        "routes": {{ blueprint_info.routes | default([]) | tojson }},
        "methods": {{ blueprint_info.methods | default(['GET']) | tojson }},
        "description": "{{ blueprint_info.description | default('') }}",
        "version": "{{ blueprint_info.version | default(api_version) }}"
      }{{ ',' if not loop.last }}
      {%- endfor -%}
    }
  },
  "documentation": {
    "openapi_version": "{{ openapi_version | default('3.0.3') }}",
    "swagger_ui_version": "{{ swagger_ui_version | default('4.15.5') }}",
    "redoc_version": "{{ redoc_version | default('2.0.0') }}",
    "interactive_docs": {{ interactive_docs_enabled | default(true) | lower }},
    "downloadable_spec": {{ downloadable_spec_enabled | default(true) | lower }},
    "postman_collection": "{{ postman_collection_url | default(null) }}",
    "examples_included": {{ examples_included | default(true) | lower }}
  },
  "standards": {
    "rest_compliance": {{ rest_compliant | default(true) | lower }},
    "hateoas": {{ hateoas_enabled | default(false) | lower }},
    "json_api": {{ json_api_compliant | default(false) | lower }},
    "hal": {{ hal_compliant | default(false) | lower }},
    "http_status_codes": {{ standard_http_codes | default(true) | lower }},
    "content_negotiation": {{ content_negotiation_enabled | default(true) | lower }}
  },
  "security": {
    "https_required": {{ https_required | default(config.FORCE_HTTPS, false) | lower }},
    "cors_enabled": {{ cors_enabled | default(true) | lower }},
    "csrf_protection": {{ csrf_enabled | default(config.WTF_CSRF_ENABLED, true) | lower }},
    "xss_protection": {{ xss_protection_enabled | default(true) | lower }},
    "content_security_policy": {{ csp_enabled | default(true) | lower }},
    "rate_limiting": {
      "enabled": {{ rate_limiting_enabled | default(true) | lower }},
      "strategy": "{{ rate_limit_strategy | default('fixed_window') }}",
      "default_limits": {
        "per_minute": {{ rate_limit_per_minute | default(60) }},
        "per_hour": {{ rate_limit_per_hour | default(1000) }},
        "per_day": {{ rate_limit_per_day | default(10000) }}
      }
    },
    "input_validation": {{ input_validation_enabled | default(true) | lower }},
    "output_sanitization": {{ output_sanitization_enabled | default(true) | lower }},
    "audit_logging": {{ audit_logging_enabled | default(true) | lower }}
  },
  "monitoring": {
    "health_checks": {{ health_checks_enabled | default(true) | lower }},
    "metrics_collection": {{ metrics_enabled | default(true) | lower }},
    "performance_monitoring": {{ performance_monitoring_enabled | default(true) | lower }},
    "error_tracking": {{ error_tracking_enabled | default(true) | lower }},
    "logging_level": "{{ log_level | default(config.LOG_LEVEL, 'INFO') }}",
    "structured_logging": {{ structured_logging_enabled | default(true) | lower }},
    "distributed_tracing": {{ tracing_enabled | default(false) | lower }}
  },
  "development": {
    "debug_toolbar": {{ debug_toolbar_enabled | default(config.DEBUG, false) | lower }},
    "hot_reload": {{ hot_reload_enabled | default(config.DEBUG, false) | lower }},
    "sql_echo": {{ sql_echo_enabled | default(config.SQLALCHEMY_ECHO, false) | lower }},
    "profiling": {{ profiling_enabled | default(false) | lower }},
    "testing_tools": {{ testing_tools_enabled | default(true) | lower }}
  }
}
{%- endblock -%}

{%- block links -%}
{
  "self": "{{ self_link | default(request.url) }}",
  "api_root": "{{ api_root | default(url_for('api.root', _external=True)) }}",
  "documentation": "{{ documentation_link | default(url_for('api.docs', _external=True)) }}",
  "openapi_spec": "{{ openapi_spec_link | default(url_for('api.openapi', _external=True)) }}",
  "swagger_ui": "{{ swagger_ui_link | default(url_for('api.swagger_ui', _external=True)) }}",
  "redoc": "{{ redoc_link | default(url_for('api.redoc', _external=True)) }}",
  "health": "{{ health_link | default(url_for('health.status', _external=True)) }}",
  "metrics": "{{ metrics_link | default(url_for('api.metrics', _external=True)) }}",
  "status": "{{ status_link | default(url_for('api.status', _external=True)) }}",
  "ping": "{{ ping_link | default(url_for('api.ping', _external=True)) }}",
  "blueprints": {
    {%- for blueprint_name, blueprint_info in blueprints.items() -%}
    "{{ blueprint_name }}": {
      "self": "{{ blueprint_info.base_url | default(url_for(blueprint_name + '.index', _external=True)) }}",
      "routes": "{{ blueprint_info.routes_url | default(url_for(blueprint_name + '.routes', _external=True)) }}",
      "schema": "{{ blueprint_info.schema_url | default(url_for(blueprint_name + '.schema', _external=True)) }}"
    }{{ ',' if not loop.last }}
    {%- endfor -%}
  },
  "relations": {
    "parent": "{{ parent_link | default(null) }}",
    "children": {{ children_links | default([]) | tojson }},
    "related": {{ related_links | default([]) | tojson }}
  }
}
{%- endblock -%}

{%- block warnings -%}
{{ warnings | default([]) | tojson }}
{%- endblock -%}

{%- block notifications -%}
[
  {%- if config.DEBUG -%}
  {
    "type": "warning",
    "message": "API is running in debug mode - not suitable for production",
    "code": "DEBUG_MODE_ENABLED",
    "severity": "medium",
    "timestamp": "{{ moment().utc().format('YYYY-MM-DDTHH:mm:ss.SSS[Z]') }}"
  }{{ ',' if deprecated_versions or maintenance_mode }}
  {%- endif -%}
  {%- if deprecated_versions -%}
  {
    "type": "deprecation",
    "message": "API versions {{ deprecated_versions | join(', ') }} are deprecated and will be removed",
    "code": "VERSION_DEPRECATED",
    "severity": "medium",
    "timestamp": "{{ moment().utc().format('YYYY-MM-DDTHH:mm:ss.SSS[Z]') }}",
    "details": {
      "deprecated_versions": {{ deprecated_versions | tojson }},
      "sunset_date": "{{ version_sunset_date | default(null) }}",
      "migration_guide": "{{ migration_guide_url | default(null) }}"
    }
  }{{ ',' if maintenance_mode }}
  {%- endif -%}
  {%- if maintenance_mode -%}
  {
    "type": "maintenance",
    "message": "API is scheduled for maintenance",
    "code": "MAINTENANCE_SCHEDULED",
    "severity": "high",
    "timestamp": "{{ moment().utc().format('YYYY-MM-DDTHH:mm:ss.SSS[Z]') }}",
    "details": {
      "maintenance_start": "{{ maintenance_start | default(null) }}",
      "maintenance_end": "{{ maintenance_end | default(null) }}",
      "affected_services": {{ affected_services | default([]) | tojson }}
    }
  }
  {%- endif -%}
  {%- for notification in custom_notifications | default([]) -%}
  {{ ',' if loop.index0 > 0 or config.DEBUG or deprecated_versions or maintenance_mode }}
  {
    "type": "{{ notification.type | default('info') }}",
    "message": "{{ notification.message }}",
    "code": "{{ notification.code | default('CUSTOM_NOTIFICATION') }}",
    "severity": "{{ notification.severity | default('low') }}",
    "timestamp": "{{ notification.timestamp | default(moment().utc().format('YYYY-MM-DDTHH:mm:ss.SSS[Z]')) }}",
    "details": {{ notification.details | default({}) | tojson }}
  }
  {%- endfor -%}
]
{%- endblock -%}