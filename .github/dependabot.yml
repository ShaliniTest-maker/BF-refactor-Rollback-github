# Dependabot configuration for Flask ecosystem automated dependency updates and security monitoring
# Supports the migration from Node.js/Express.js to Python 3.13.3/Flask 3.1.1 per Technical Specification Section 0.1.1
# Implements security vulnerability monitoring per Section 8.4.1 and automated updates per Section 8.4.4

version: 2
updates:
  # Python pip package manager configuration for Flask ecosystem dependencies
  - package-ecosystem: "pip"
    directory: "/"
    schedule:
      # Weekly monitoring schedule for comprehensive dependency updates per Section 8.4.4
      interval: "weekly"
      # Monday at 9:00 AM UTC for optimal CI/CD pipeline integration
      day: "monday"
      time: "09:00"
      timezone: "UTC"
    
    # Security-focused dependency update configuration
    open-pull-requests-limit: 10
    
    # Enhanced pull request configuration for Flask migration context
    pull-request-branch-name:
      separator: "/"
    
    # Commit message configuration for clear tracking
    commit-message:
      prefix: "deps"
      prefix-development: "deps-dev"
      include: "scope"
    
    # Target branch for dependency updates aligned with CI/CD workflow
    target-branch: "main"
    
    # Reviewer assignment for security-critical updates
    reviewers:
      - "devops-team"
      - "security-team"
    
    # Flask ecosystem dependency groups for organized updates
    groups:
      # Core Flask framework dependencies per Section 3.2.1
      flask-core:
        patterns:
          - "flask*"
          - "werkzeug*"
          - "jinja2*"
          - "itsdangerous*"
          - "click*"
          - "blinker*"
        update-types:
          - "minor"
          - "patch"
      
      # Database and ORM dependencies per Section 3.2.2  
      database-orm:
        patterns:
          - "flask-sqlalchemy*"
          - "flask-migrate*" 
          - "sqlalchemy*"
          - "alembic*"
          - "psycopg2*"
          - "sqlalchemy-utils*"
        update-types:
          - "minor"
          - "patch"
      
      # Authentication and security dependencies per Section 6.4.1
      auth-security:
        patterns:
          - "auth0-python*"
          - "flask-login*"
          - "flask-jwt-extended*"
          - "flask-principal*"
          - "flask-security*"
          - "flask-wtf*"
          - "wtforms*"
          - "cryptography*"
          - "pyjwt*"
        update-types:
          - "minor"
          - "patch"
      
      # Monitoring and observability dependencies per Section 6.4.6.1
      monitoring-observability:
        patterns:
          - "prometheus-client*"
          - "structlog*"
          - "flask-cors*"
          - "python-json-logger*"
        update-types:
          - "minor"
          - "patch"
      
      # AWS and cloud service dependencies per Section 8.1
      aws-cloud:
        patterns:
          - "boto3*"
          - "botocore*"
          - "awscli*"
          - "flask-session*"
        update-types:
          - "minor"
          - "patch"
      
      # Development and testing dependencies per Section 3.6.3
      dev-testing:
        patterns:
          - "pytest*"
          - "pytest-flask*"
          - "pytest-cov*"
          - "bandit*"
          - "safety*"
          - "pip-audit*"
          - "black*"
          - "flake8*"
          - "mypy*"
        update-types:
          - "minor"
          - "patch"
    
    # Allow automatic updates for security patches
    allow:
      # Security updates get highest priority per Section 8.4.1
      - dependency-type: "all"
        update-type: "security"
      # Production dependencies for Flask ecosystem
      - dependency-type: "production"
        update-type: "version-update:semver-patch"
      - dependency-type: "production"  
        update-type: "version-update:semver-minor"
      # Development dependencies for testing and CI/CD
      - dependency-type: "development"
        update-type: "version-update:semver-patch"
      - dependency-type: "development"
        update-type: "version-update:semver-minor"
    
    # Ignore specific major version updates that require manual migration planning
    ignore:
      # Major Flask framework updates require careful migration planning
      - dependency-name: "flask"
        update-types: ["version-update:semver-major"]
      - dependency-name: "flask-sqlalchemy"
        update-types: ["version-update:semver-major"]  
      - dependency-name: "sqlalchemy"
        update-types: ["version-update:semver-major"]
      # Python runtime version managed separately per Section 3.1.1
      - dependency-name: "python"
        update-types: ["version-update:semver-major"]
    
    # Custom labels for Flask migration context and security tracking
    labels:
      - "dependencies"
      - "flask-migration"
      - "security-update"
      - "automated-pr"
    
    # Enable security advisories integration for proactive vulnerability detection
    enable-beta-ecosystems: false
    
    # Milestone assignment for tracking dependency updates in Flask migration project  
    milestone: "Flask Migration Dependency Updates"
    
    # Additional configuration for enhanced security monitoring
    insecure-external-code-execution: "deny"
    
  # GitHub Actions workflow dependencies for CI/CD pipeline per Section 8.4
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday" 
      time: "10:00"
      timezone: "UTC"
    
    open-pull-requests-limit: 5
    
    # Target branch alignment with main CI/CD workflow
    target-branch: "main"
    
    # Commit message configuration for GitHub Actions updates
    commit-message:
      prefix: "ci"
      include: "scope"
    
    # Group GitHub Actions updates for organized review
    groups:
      github-actions:
        patterns:
          - "*"
        update-types:
          - "minor"
          - "patch"
    
    # Labels for GitHub Actions dependency tracking
    labels:
      - "ci-cd"
      - "github-actions" 
      - "dependencies"
      - "flask-pipeline"
    
    # Allow security and patch updates for GitHub Actions
    allow:
      - dependency-type: "all"
        update-type: "security"
      - dependency-type: "all"
        update-type: "version-update:semver-patch"
      - dependency-type: "all"
        update-type: "version-update:semver-minor"
    
    # Reviewer assignment for CI/CD changes
    reviewers:
      - "devops-team"

  # Docker base image monitoring for python:3.13.3-slim per Section 8.3.1
  - package-ecosystem: "docker"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "tuesday"
      time: "09:00" 
      timezone: "UTC"
    
    open-pull-requests-limit: 3
    
    # Target branch for Docker image updates
    target-branch: "main"
    
    # Commit message configuration for Docker updates
    commit-message:
      prefix: "docker"
      include: "scope"
    
    # Group Docker updates for security and base image tracking
    groups:
      python-base-images:
        patterns:
          - "python*"
        update-types:
          - "minor"
          - "patch"
    
    # Labels for Docker dependency tracking aligned with container security
    labels:
      - "docker"
      - "container-security"
      - "python-runtime"
      - "dependencies"
    
    # Allow security updates and patch versions for base images
    allow:
      - dependency-type: "all"
        update-type: "security"
      - dependency-type: "all"
        update-type: "version-update:semver-patch"
      - dependency-type: "all"
        update-type: "version-update:semver-minor"
    
    # Ignore major Python version updates (managed separately per migration plan)
    ignore:
      - dependency-name: "python"
        update-types: ["version-update:semver-major"]
    
    # Reviewer assignment for container security updates
    reviewers:
      - "devops-team"
      - "security-team"